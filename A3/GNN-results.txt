Model: Baseline Hidden Channels: 32
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 1.1885, Train Accuracy: 0.3445, Val BCE: 0.7644, Val Accuracy: 0.3528
Epoch 11/100, Train Loss: 0.7443, Train Accuracy: 0.7560, Val BCE: 0.6291, Val Accuracy: 0.6789
Epoch 21/100, Train Loss: 0.6984, Train Accuracy: 0.8007, Val BCE: 0.5955, Val Accuracy: 0.6802
Epoch 31/100, Train Loss: 0.6790, Train Accuracy: 0.7960, Val BCE: 0.6017, Val Accuracy: 0.7094
Epoch 41/100, Train Loss: 0.6586, Train Accuracy: 0.7886, Val BCE: 0.6092, Val Accuracy: 0.7005
Epoch 51/100, Train Loss: 0.6452, Train Accuracy: 0.7848, Val BCE: 0.6268, Val Accuracy: 0.6396
Epoch 61/100, Train Loss: 0.6303, Train Accuracy: 0.7900, Val BCE: 0.5952, Val Accuracy: 0.6612
Epoch 71/100, Train Loss: 0.6227, Train Accuracy: 0.7968, Val BCE: 0.5924, Val Accuracy: 0.6751
Epoch 81/100, Train Loss: 0.6025, Train Accuracy: 0.8048, Val BCE: 0.6093, Val Accuracy: 0.6371
Epoch 91/100, Train Loss: 0.6061, Train Accuracy: 0.7972, Val BCE: 0.5913, Val Accuracy: 0.6916
{'rocauc': 0.7048759180289031}
Model: Baseline Hidden Channels: 64
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.8375, Train Accuracy: 0.7234, Val BCE: 0.6384, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.7227, Train Accuracy: 0.8082, Val BCE: 0.6239, Val Accuracy: 0.6802
Epoch 21/100, Train Loss: 0.6958, Train Accuracy: 0.8095, Val BCE: 0.6282, Val Accuracy: 0.6802
Epoch 31/100, Train Loss: 0.6672, Train Accuracy: 0.8024, Val BCE: 0.6296, Val Accuracy: 0.6802
Epoch 41/100, Train Loss: 0.6574, Train Accuracy: 0.7909, Val BCE: 0.6132, Val Accuracy: 0.7043
Epoch 51/100, Train Loss: 0.6347, Train Accuracy: 0.7936, Val BCE: 0.6331, Val Accuracy: 0.6472
Epoch 61/100, Train Loss: 0.6243, Train Accuracy: 0.7928, Val BCE: 0.6582, Val Accuracy: 0.6294
Epoch 71/100, Train Loss: 0.6150, Train Accuracy: 0.7911, Val BCE: 0.5853, Val Accuracy: 0.6637
Epoch 81/100, Train Loss: 0.6179, Train Accuracy: 0.7912, Val BCE: 0.6147, Val Accuracy: 0.6383
Epoch 91/100, Train Loss: 0.6062, Train Accuracy: 0.7990, Val BCE: 0.6211, Val Accuracy: 0.6612
{'rocauc': 0.7033359985785359}
Model: Baseline Hidden Channels: 128
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.8868, Train Accuracy: 0.6115, Val BCE: 0.6660, Val Accuracy: 0.6269
Epoch 11/100, Train Loss: 0.7128, Train Accuracy: 0.7944, Val BCE: 0.6083, Val Accuracy: 0.6815
Epoch 21/100, Train Loss: 0.6873, Train Accuracy: 0.7980, Val BCE: 0.6245, Val Accuracy: 0.6802
Epoch 31/100, Train Loss: 0.6613, Train Accuracy: 0.7938, Val BCE: 0.6259, Val Accuracy: 0.7056
Epoch 41/100, Train Loss: 0.6449, Train Accuracy: 0.7917, Val BCE: 0.5880, Val Accuracy: 0.7145
Epoch 51/100, Train Loss: 0.6286, Train Accuracy: 0.7977, Val BCE: 0.6109, Val Accuracy: 0.7081
Epoch 61/100, Train Loss: 0.6255, Train Accuracy: 0.7985, Val BCE: 0.5804, Val Accuracy: 0.6916
Epoch 71/100, Train Loss: 0.6024, Train Accuracy: 0.8043, Val BCE: 0.5723, Val Accuracy: 0.7145
Epoch 81/100, Train Loss: 0.5906, Train Accuracy: 0.8190, Val BCE: 0.6056, Val Accuracy: 0.6827
Epoch 91/100, Train Loss: 0.5878, Train Accuracy: 0.7994, Val BCE: 0.5807, Val Accuracy: 0.7005
{'rocauc': 0.7035432954276238}
Model: GCN Hidden Channels: 32 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7400, Train Accuracy: 0.7993, Val BCE: 0.6489, Val Accuracy: 0.6764
Epoch 11/100, Train Loss: 0.6804, Train Accuracy: 0.8018, Val BCE: 0.6526, Val Accuracy: 0.6142
Epoch 21/100, Train Loss: 0.6638, Train Accuracy: 0.7985, Val BCE: 0.6133, Val Accuracy: 0.6599
Epoch 31/100, Train Loss: 0.6522, Train Accuracy: 0.8106, Val BCE: 0.6417, Val Accuracy: 0.6548
Epoch 41/100, Train Loss: 0.6508, Train Accuracy: 0.8059, Val BCE: 0.6240, Val Accuracy: 0.6536
Epoch 51/100, Train Loss: 0.6430, Train Accuracy: 0.8100, Val BCE: 0.6564, Val Accuracy: 0.6142
Epoch 61/100, Train Loss: 0.6418, Train Accuracy: 0.8037, Val BCE: 0.6428, Val Accuracy: 0.6206
Epoch 71/100, Train Loss: 0.6332, Train Accuracy: 0.8075, Val BCE: 0.6365, Val Accuracy: 0.6447
Epoch 81/100, Train Loss: 0.6308, Train Accuracy: 0.8134, Val BCE: 0.6594, Val Accuracy: 0.6282
Epoch 91/100, Train Loss: 0.6271, Train Accuracy: 0.8116, Val BCE: 0.6279, Val Accuracy: 0.6561
{'rocauc': 0.6009757758824924}
Model: GCN Hidden Channels: 32 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7414, Train Accuracy: 0.7787, Val BCE: 0.6221, Val Accuracy: 0.6789
Epoch 11/100, Train Loss: 0.6784, Train Accuracy: 0.8053, Val BCE: 0.6444, Val Accuracy: 0.6409
Epoch 21/100, Train Loss: 0.6468, Train Accuracy: 0.8015, Val BCE: 0.6709, Val Accuracy: 0.6409
Epoch 31/100, Train Loss: 0.6206, Train Accuracy: 0.8040, Val BCE: 0.6372, Val Accuracy: 0.6777
Epoch 41/100, Train Loss: 0.5984, Train Accuracy: 0.8108, Val BCE: 0.6105, Val Accuracy: 0.7018
Epoch 51/100, Train Loss: 0.5857, Train Accuracy: 0.8174, Val BCE: 0.6265, Val Accuracy: 0.6459
Epoch 61/100, Train Loss: 0.5818, Train Accuracy: 0.8147, Val BCE: 0.6287, Val Accuracy: 0.6891
Epoch 71/100, Train Loss: 0.5541, Train Accuracy: 0.8312, Val BCE: 0.6390, Val Accuracy: 0.6891
Epoch 81/100, Train Loss: 0.5441, Train Accuracy: 0.8338, Val BCE: 0.6336, Val Accuracy: 0.7005
Epoch 91/100, Train Loss: 0.5403, Train Accuracy: 0.8350, Val BCE: 0.6191, Val Accuracy: 0.7107
{'rocauc': 0.6876813847429518}
Model: GCN Hidden Channels: 32 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7433, Train Accuracy: 0.7824, Val BCE: 0.6350, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6735, Train Accuracy: 0.7898, Val BCE: 0.6476, Val Accuracy: 0.6815
Epoch 21/100, Train Loss: 0.6240, Train Accuracy: 0.7936, Val BCE: 0.6365, Val Accuracy: 0.6434
Epoch 31/100, Train Loss: 0.5636, Train Accuracy: 0.8166, Val BCE: 0.6745, Val Accuracy: 0.6434
Epoch 41/100, Train Loss: 0.5462, Train Accuracy: 0.8268, Val BCE: 0.6165, Val Accuracy: 0.6827
Epoch 51/100, Train Loss: 0.5284, Train Accuracy: 0.8301, Val BCE: 0.5977, Val Accuracy: 0.6751
Epoch 61/100, Train Loss: 0.4988, Train Accuracy: 0.8501, Val BCE: 0.6658, Val Accuracy: 0.6637
Epoch 71/100, Train Loss: 0.4904, Train Accuracy: 0.8506, Val BCE: 0.7006, Val Accuracy: 0.6878
Epoch 81/100, Train Loss: 0.4941, Train Accuracy: 0.8410, Val BCE: 0.6823, Val Accuracy: 0.6967
Epoch 91/100, Train Loss: 0.4759, Train Accuracy: 0.8597, Val BCE: 0.6495, Val Accuracy: 0.6840
{'rocauc': 0.6853085761667852}
Model: GCN Hidden Channels: 64 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7490, Train Accuracy: 0.7535, Val BCE: 0.6669, Val Accuracy: 0.4822
Epoch 11/100, Train Loss: 0.6845, Train Accuracy: 0.7865, Val BCE: 0.6216, Val Accuracy: 0.6815
Epoch 21/100, Train Loss: 0.6774, Train Accuracy: 0.8054, Val BCE: 0.6331, Val Accuracy: 0.6815
Epoch 31/100, Train Loss: 0.6565, Train Accuracy: 0.8054, Val BCE: 0.6501, Val Accuracy: 0.6751
Epoch 41/100, Train Loss: 0.6446, Train Accuracy: 0.7949, Val BCE: 0.6609, Val Accuracy: 0.6256
Epoch 51/100, Train Loss: 0.6391, Train Accuracy: 0.8013, Val BCE: 0.6458, Val Accuracy: 0.6307
Epoch 61/100, Train Loss: 0.6262, Train Accuracy: 0.7949, Val BCE: 0.6443, Val Accuracy: 0.6396
Epoch 71/100, Train Loss: 0.6218, Train Accuracy: 0.7980, Val BCE: 0.6554, Val Accuracy: 0.6294
Epoch 81/100, Train Loss: 0.6142, Train Accuracy: 0.8037, Val BCE: 0.6533, Val Accuracy: 0.6510
Epoch 91/100, Train Loss: 0.6155, Train Accuracy: 0.8054, Val BCE: 0.6559, Val Accuracy: 0.6244
{'rocauc': 0.6255145403932717}
Model: GCN Hidden Channels: 64 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7260, Train Accuracy: 0.7728, Val BCE: 0.6268, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6416, Train Accuracy: 0.7930, Val BCE: 0.6239, Val Accuracy: 0.6599
Epoch 21/100, Train Loss: 0.6059, Train Accuracy: 0.8130, Val BCE: 0.6103, Val Accuracy: 0.6599
Epoch 31/100, Train Loss: 0.5716, Train Accuracy: 0.8207, Val BCE: 0.6159, Val Accuracy: 0.6992
Epoch 41/100, Train Loss: 0.5469, Train Accuracy: 0.8369, Val BCE: 0.6270, Val Accuracy: 0.6485
Epoch 51/100, Train Loss: 0.5307, Train Accuracy: 0.8330, Val BCE: 0.6328, Val Accuracy: 0.6459
Epoch 61/100, Train Loss: 0.5063, Train Accuracy: 0.8423, Val BCE: 0.6080, Val Accuracy: 0.7081
Epoch 71/100, Train Loss: 0.5017, Train Accuracy: 0.8382, Val BCE: 0.6089, Val Accuracy: 0.6739
Epoch 81/100, Train Loss: 0.4917, Train Accuracy: 0.8504, Val BCE: 0.6097, Val Accuracy: 0.6701
Epoch 91/100, Train Loss: 0.4845, Train Accuracy: 0.8449, Val BCE: 0.6428, Val Accuracy: 0.6865
{'rocauc': 0.6689543354655295}
Model: GCN Hidden Channels: 64 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7412, Train Accuracy: 0.7969, Val BCE: 0.6319, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6694, Train Accuracy: 0.7805, Val BCE: 0.6370, Val Accuracy: 0.6865
Epoch 21/100, Train Loss: 0.6203, Train Accuracy: 0.7980, Val BCE: 0.6524, Val Accuracy: 0.6536
Epoch 31/100, Train Loss: 0.5769, Train Accuracy: 0.8020, Val BCE: 0.6547, Val Accuracy: 0.6561
Epoch 41/100, Train Loss: 0.5391, Train Accuracy: 0.8224, Val BCE: 0.7209, Val Accuracy: 0.5926
Epoch 51/100, Train Loss: 0.5131, Train Accuracy: 0.8323, Val BCE: 0.7160, Val Accuracy: 0.6345
Epoch 61/100, Train Loss: 0.5019, Train Accuracy: 0.8366, Val BCE: 0.6657, Val Accuracy: 0.6713
Epoch 71/100, Train Loss: 0.4719, Train Accuracy: 0.8454, Val BCE: 0.6901, Val Accuracy: 0.6751
Epoch 81/100, Train Loss: 0.4699, Train Accuracy: 0.8539, Val BCE: 0.6382, Val Accuracy: 0.6713
Epoch 91/100, Train Loss: 0.4543, Train Accuracy: 0.8566, Val BCE: 0.7931, Val Accuracy: 0.6510
{'rocauc': 0.6932858031272211}
Model: GCN Hidden Channels: 128 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7427, Train Accuracy: 0.7709, Val BCE: 0.6154, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6874, Train Accuracy: 0.7994, Val BCE: 0.6372, Val Accuracy: 0.6802
Epoch 21/100, Train Loss: 0.6814, Train Accuracy: 0.8007, Val BCE: 0.6317, Val Accuracy: 0.6764
Epoch 31/100, Train Loss: 0.6761, Train Accuracy: 0.8048, Val BCE: 0.6223, Val Accuracy: 0.6840
Epoch 41/100, Train Loss: 0.6603, Train Accuracy: 0.7914, Val BCE: 0.6226, Val Accuracy: 0.6624
Epoch 51/100, Train Loss: 0.6501, Train Accuracy: 0.7931, Val BCE: 0.6369, Val Accuracy: 0.6523
Epoch 61/100, Train Loss: 0.6289, Train Accuracy: 0.7928, Val BCE: 0.6346, Val Accuracy: 0.6434
Epoch 71/100, Train Loss: 0.6205, Train Accuracy: 0.8029, Val BCE: 0.6576, Val Accuracy: 0.6358
Epoch 81/100, Train Loss: 0.6121, Train Accuracy: 0.8073, Val BCE: 0.5952, Val Accuracy: 0.6840
Epoch 91/100, Train Loss: 0.6032, Train Accuracy: 0.8056, Val BCE: 0.6123, Val Accuracy: 0.6980
{'rocauc': 0.6450818822553896}
Model: GCN Hidden Channels: 128 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7542, Train Accuracy: 0.7486, Val BCE: 0.6185, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6580, Train Accuracy: 0.7881, Val BCE: 0.6522, Val Accuracy: 0.6320
Epoch 21/100, Train Loss: 0.6146, Train Accuracy: 0.8136, Val BCE: 0.7184, Val Accuracy: 0.5799
Epoch 31/100, Train Loss: 0.5893, Train Accuracy: 0.8185, Val BCE: 0.6359, Val Accuracy: 0.6739
Epoch 41/100, Train Loss: 0.5728, Train Accuracy: 0.8241, Val BCE: 0.6593, Val Accuracy: 0.6345
Epoch 51/100, Train Loss: 0.5456, Train Accuracy: 0.8248, Val BCE: 0.6180, Val Accuracy: 0.6701
Epoch 61/100, Train Loss: 0.5285, Train Accuracy: 0.8367, Val BCE: 0.6488, Val Accuracy: 0.6472
Epoch 71/100, Train Loss: 0.5169, Train Accuracy: 0.8427, Val BCE: 0.6578, Val Accuracy: 0.6853
Epoch 81/100, Train Loss: 0.5140, Train Accuracy: 0.8350, Val BCE: 0.6599, Val Accuracy: 0.6764
Epoch 91/100, Train Loss: 0.4906, Train Accuracy: 0.8484, Val BCE: 0.6596, Val Accuracy: 0.6624
{'rocauc': 0.6820621594408907}
Model: GCN Hidden Channels: 128 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7824, Train Accuracy: 0.7311, Val BCE: 0.6189, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6705, Train Accuracy: 0.7862, Val BCE: 0.6846, Val Accuracy: 0.5635
Epoch 21/100, Train Loss: 0.5937, Train Accuracy: 0.7952, Val BCE: 0.6578, Val Accuracy: 0.5926
Epoch 31/100, Train Loss: 0.5596, Train Accuracy: 0.8164, Val BCE: 0.6435, Val Accuracy: 0.6358
Epoch 41/100, Train Loss: 0.5413, Train Accuracy: 0.8204, Val BCE: 0.6838, Val Accuracy: 0.6688
Epoch 51/100, Train Loss: 0.4967, Train Accuracy: 0.8419, Val BCE: 0.6781, Val Accuracy: 0.6358
Epoch 61/100, Train Loss: 0.4847, Train Accuracy: 0.8506, Val BCE: 0.6679, Val Accuracy: 0.6612
Epoch 71/100, Train Loss: 0.4809, Train Accuracy: 0.8440, Val BCE: 0.6740, Val Accuracy: 0.6548
Epoch 81/100, Train Loss: 0.4483, Train Accuracy: 0.8608, Val BCE: 0.7463, Val Accuracy: 0.6561
Epoch 91/100, Train Loss: 0.4412, Train Accuracy: 0.8659, Val BCE: 0.7058, Val Accuracy: 0.6624
{'rocauc': 0.6785233060886046}
Model: GAT Hidden Channels: 32 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7196, Train Accuracy: 0.7733, Val BCE: 0.6337, Val Accuracy: 0.6650
Epoch 11/100, Train Loss: 0.6477, Train Accuracy: 0.7867, Val BCE: 0.6521, Val Accuracy: 0.6294
Epoch 21/100, Train Loss: 0.6221, Train Accuracy: 0.7925, Val BCE: 0.6088, Val Accuracy: 0.6764
Epoch 31/100, Train Loss: 0.6102, Train Accuracy: 0.8038, Val BCE: 0.6286, Val Accuracy: 0.6459
Epoch 41/100, Train Loss: 0.6035, Train Accuracy: 0.7997, Val BCE: 0.6566, Val Accuracy: 0.6472
Epoch 51/100, Train Loss: 0.5981, Train Accuracy: 0.7993, Val BCE: 0.6359, Val Accuracy: 0.6485
Epoch 61/100, Train Loss: 0.5938, Train Accuracy: 0.8065, Val BCE: 0.6692, Val Accuracy: 0.6117
Epoch 71/100, Train Loss: 0.5805, Train Accuracy: 0.8009, Val BCE: 0.6545, Val Accuracy: 0.6574
Epoch 81/100, Train Loss: 0.5803, Train Accuracy: 0.8056, Val BCE: 0.6364, Val Accuracy: 0.6954
Epoch 91/100, Train Loss: 0.5822, Train Accuracy: 0.8051, Val BCE: 0.6458, Val Accuracy: 0.6358
{'rocauc': 0.6500310945273632}
Model: GAT Hidden Channels: 32 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7391, Train Accuracy: 0.7437, Val BCE: 0.6287, Val Accuracy: 0.6827
Epoch 11/100, Train Loss: 0.6245, Train Accuracy: 0.7957, Val BCE: 0.5937, Val Accuracy: 0.7005
Epoch 21/100, Train Loss: 0.5930, Train Accuracy: 0.8086, Val BCE: 0.5973, Val Accuracy: 0.6789
Epoch 31/100, Train Loss: 0.5681, Train Accuracy: 0.8125, Val BCE: 0.6231, Val Accuracy: 0.6789
Epoch 41/100, Train Loss: 0.5513, Train Accuracy: 0.8171, Val BCE: 0.5874, Val Accuracy: 0.6942
Epoch 51/100, Train Loss: 0.5327, Train Accuracy: 0.8312, Val BCE: 0.5585, Val Accuracy: 0.7030
Epoch 61/100, Train Loss: 0.5204, Train Accuracy: 0.8330, Val BCE: 0.6252, Val Accuracy: 0.6662
Epoch 71/100, Train Loss: 0.5127, Train Accuracy: 0.8380, Val BCE: 0.6376, Val Accuracy: 0.6992
Epoch 81/100, Train Loss: 0.5086, Train Accuracy: 0.8363, Val BCE: 0.6304, Val Accuracy: 0.6929
Epoch 91/100, Train Loss: 0.5024, Train Accuracy: 0.8397, Val BCE: 0.6288, Val Accuracy: 0.7030
{'rocauc': 0.7135157545605307}
Model: GAT Hidden Channels: 32 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7269, Train Accuracy: 0.7659, Val BCE: 0.6278, Val Accuracy: 0.6624
Epoch 11/100, Train Loss: 0.5818, Train Accuracy: 0.8071, Val BCE: 0.6066, Val Accuracy: 0.6662
Epoch 21/100, Train Loss: 0.5355, Train Accuracy: 0.8251, Val BCE: 0.5703, Val Accuracy: 0.7195
Epoch 31/100, Train Loss: 0.5252, Train Accuracy: 0.8327, Val BCE: 0.6461, Val Accuracy: 0.6853
Epoch 41/100, Train Loss: 0.4860, Train Accuracy: 0.8440, Val BCE: 0.6302, Val Accuracy: 0.6916
Epoch 51/100, Train Loss: 0.4679, Train Accuracy: 0.8504, Val BCE: 0.6805, Val Accuracy: 0.6992
Epoch 61/100, Train Loss: 0.4378, Train Accuracy: 0.8555, Val BCE: 0.6891, Val Accuracy: 0.6980
Epoch 71/100, Train Loss: 0.4120, Train Accuracy: 0.8651, Val BCE: 0.6800, Val Accuracy: 0.6929
Epoch 81/100, Train Loss: 0.3965, Train Accuracy: 0.8742, Val BCE: 0.7307, Val Accuracy: 0.6929
Epoch 91/100, Train Loss: 0.3731, Train Accuracy: 0.8844, Val BCE: 0.6880, Val Accuracy: 0.6992
{'rocauc': 0.714611466477138}
Model: GAT Hidden Channels: 64 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7261, Train Accuracy: 0.7886, Val BCE: 0.6220, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6181, Train Accuracy: 0.7927, Val BCE: 0.7233, Val Accuracy: 0.5698
Epoch 21/100, Train Loss: 0.5991, Train Accuracy: 0.7961, Val BCE: 0.6158, Val Accuracy: 0.6434
Epoch 31/100, Train Loss: 0.5815, Train Accuracy: 0.8067, Val BCE: 0.6519, Val Accuracy: 0.6675
Epoch 41/100, Train Loss: 0.5767, Train Accuracy: 0.8073, Val BCE: 0.6470, Val Accuracy: 0.6358
Epoch 51/100, Train Loss: 0.5716, Train Accuracy: 0.8094, Val BCE: 0.6549, Val Accuracy: 0.6891
Epoch 61/100, Train Loss: 0.5666, Train Accuracy: 0.8056, Val BCE: 0.6520, Val Accuracy: 0.6497
Epoch 71/100, Train Loss: 0.5659, Train Accuracy: 0.8082, Val BCE: 0.6486, Val Accuracy: 0.6142
Epoch 81/100, Train Loss: 0.5680, Train Accuracy: 0.8068, Val BCE: 0.6497, Val Accuracy: 0.6650
Epoch 91/100, Train Loss: 0.5622, Train Accuracy: 0.8075, Val BCE: 0.6497, Val Accuracy: 0.6637
{'rocauc': 0.6481395107794361}
Model: GAT Hidden Channels: 64 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7063, Train Accuracy: 0.7491, Val BCE: 0.6330, Val Accuracy: 0.6383
Epoch 11/100, Train Loss: 0.5984, Train Accuracy: 0.7947, Val BCE: 0.6362, Val Accuracy: 0.6447
Epoch 21/100, Train Loss: 0.5522, Train Accuracy: 0.8219, Val BCE: 0.6187, Val Accuracy: 0.6827
Epoch 31/100, Train Loss: 0.5196, Train Accuracy: 0.8331, Val BCE: 0.6291, Val Accuracy: 0.6586
Epoch 41/100, Train Loss: 0.4950, Train Accuracy: 0.8388, Val BCE: 0.6361, Val Accuracy: 0.6840
Epoch 51/100, Train Loss: 0.4767, Train Accuracy: 0.8481, Val BCE: 0.6709, Val Accuracy: 0.6891
Epoch 61/100, Train Loss: 0.4567, Train Accuracy: 0.8572, Val BCE: 0.6326, Val Accuracy: 0.6853
Epoch 71/100, Train Loss: 0.4445, Train Accuracy: 0.8641, Val BCE: 0.6969, Val Accuracy: 0.6726
Epoch 81/100, Train Loss: 0.4336, Train Accuracy: 0.8610, Val BCE: 0.6925, Val Accuracy: 0.6726
Epoch 91/100, Train Loss: 0.4269, Train Accuracy: 0.8649, Val BCE: 0.7211, Val Accuracy: 0.6777
{'rocauc': 0.6839574449182657}
Model: GAT Hidden Channels: 64 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7302, Train Accuracy: 0.7621, Val BCE: 0.6155, Val Accuracy: 0.6789
Epoch 11/100, Train Loss: 0.5759, Train Accuracy: 0.8094, Val BCE: 0.5785, Val Accuracy: 0.6878
Epoch 21/100, Train Loss: 0.5260, Train Accuracy: 0.8279, Val BCE: 0.6482, Val Accuracy: 0.6548
Epoch 31/100, Train Loss: 0.4656, Train Accuracy: 0.8460, Val BCE: 0.6309, Val Accuracy: 0.6992
Epoch 41/100, Train Loss: 0.4306, Train Accuracy: 0.8550, Val BCE: 0.6352, Val Accuracy: 0.7056
Epoch 51/100, Train Loss: 0.4006, Train Accuracy: 0.8709, Val BCE: 0.6300, Val Accuracy: 0.6929
Epoch 61/100, Train Loss: 0.3726, Train Accuracy: 0.8752, Val BCE: 0.6884, Val Accuracy: 0.6713
Epoch 71/100, Train Loss: 0.3496, Train Accuracy: 0.8838, Val BCE: 0.7095, Val Accuracy: 0.7043
Epoch 81/100, Train Loss: 0.3424, Train Accuracy: 0.8895, Val BCE: 0.6731, Val Accuracy: 0.6904
Epoch 91/100, Train Loss: 0.3129, Train Accuracy: 0.8956, Val BCE: 0.6843, Val Accuracy: 0.6954
{'rocauc': 0.7095734126984127}
Model: GAT Hidden Channels: 128 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7386, Train Accuracy: 0.7527, Val BCE: 0.6304, Val Accuracy: 0.6675
Epoch 11/100, Train Loss: 0.6401, Train Accuracy: 0.7963, Val BCE: 0.6154, Val Accuracy: 0.6409
Epoch 21/100, Train Loss: 0.6121, Train Accuracy: 0.8034, Val BCE: 0.6391, Val Accuracy: 0.6383
Epoch 31/100, Train Loss: 0.5975, Train Accuracy: 0.8046, Val BCE: 0.6199, Val Accuracy: 0.6497
Epoch 41/100, Train Loss: 0.5935, Train Accuracy: 0.8090, Val BCE: 0.6300, Val Accuracy: 0.6688
Epoch 51/100, Train Loss: 0.5844, Train Accuracy: 0.8205, Val BCE: 0.6358, Val Accuracy: 0.6561
Epoch 61/100, Train Loss: 0.5789, Train Accuracy: 0.8229, Val BCE: 0.6472, Val Accuracy: 0.6383
Epoch 71/100, Train Loss: 0.5748, Train Accuracy: 0.8145, Val BCE: 0.6634, Val Accuracy: 0.6497
Epoch 81/100, Train Loss: 0.5662, Train Accuracy: 0.8219, Val BCE: 0.6476, Val Accuracy: 0.6497
Epoch 91/100, Train Loss: 0.5683, Train Accuracy: 0.8229, Val BCE: 0.6685, Val Accuracy: 0.6434
{'rocauc': 0.6472992181947406}
Model: GAT Hidden Channels: 128 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7763, Train Accuracy: 0.7420, Val BCE: 0.6441, Val Accuracy: 0.6472
Epoch 11/100, Train Loss: 0.6174, Train Accuracy: 0.7872, Val BCE: 0.6205, Val Accuracy: 0.6409
Epoch 21/100, Train Loss: 0.5579, Train Accuracy: 0.8160, Val BCE: 0.7043, Val Accuracy: 0.6586
Epoch 31/100, Train Loss: 0.5331, Train Accuracy: 0.8293, Val BCE: 0.6626, Val Accuracy: 0.6726
Epoch 41/100, Train Loss: 0.5069, Train Accuracy: 0.8350, Val BCE: 0.6630, Val Accuracy: 0.6371
Epoch 51/100, Train Loss: 0.4964, Train Accuracy: 0.8441, Val BCE: 0.6881, Val Accuracy: 0.6675
Epoch 61/100, Train Loss: 0.4768, Train Accuracy: 0.8478, Val BCE: 0.6903, Val Accuracy: 0.6764
Epoch 71/100, Train Loss: 0.4656, Train Accuracy: 0.8495, Val BCE: 0.7567, Val Accuracy: 0.6612
Epoch 81/100, Train Loss: 0.4543, Train Accuracy: 0.8514, Val BCE: 0.7229, Val Accuracy: 0.7005
Epoch 91/100, Train Loss: 0.4513, Train Accuracy: 0.8495, Val BCE: 0.6820, Val Accuracy: 0.6612
{'rocauc': 0.677579365079365}
Model: GAT Hidden Channels: 128 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7809, Train Accuracy: 0.7286, Val BCE: 0.6264, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.5955, Train Accuracy: 0.8067, Val BCE: 0.6161, Val Accuracy: 0.6726
Epoch 21/100, Train Loss: 0.5420, Train Accuracy: 0.8216, Val BCE: 0.6380, Val Accuracy: 0.7284
Epoch 31/100, Train Loss: 0.4707, Train Accuracy: 0.8463, Val BCE: 0.6356, Val Accuracy: 0.7157
Epoch 41/100, Train Loss: 0.4186, Train Accuracy: 0.8696, Val BCE: 0.6674, Val Accuracy: 0.7107
Epoch 51/100, Train Loss: 0.3869, Train Accuracy: 0.8766, Val BCE: 0.6789, Val Accuracy: 0.6637
Epoch 61/100, Train Loss: 0.3525, Train Accuracy: 0.8887, Val BCE: 0.6779, Val Accuracy: 0.7145
Epoch 71/100, Train Loss: 0.3262, Train Accuracy: 0.8914, Val BCE: 0.8040, Val Accuracy: 0.7018
Epoch 81/100, Train Loss: 0.3102, Train Accuracy: 0.9040, Val BCE: 0.7988, Val Accuracy: 0.6726
Epoch 91/100, Train Loss: 0.2841, Train Accuracy: 0.9112, Val BCE: 0.8356, Val Accuracy: 0.6954
{'rocauc': 0.7273528192371476}
Model: GIN Hidden Channels: 32 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.8321, Train Accuracy: 0.5907, Val BCE: 0.6597, Val Accuracy: 0.6003
Epoch 11/100, Train Loss: 0.6095, Train Accuracy: 0.7923, Val BCE: 0.6915, Val Accuracy: 0.6510
Epoch 21/100, Train Loss: 0.5814, Train Accuracy: 0.8034, Val BCE: 0.6464, Val Accuracy: 0.6332
Epoch 31/100, Train Loss: 0.5721, Train Accuracy: 0.8024, Val BCE: 0.6701, Val Accuracy: 0.6218
Epoch 41/100, Train Loss: 0.5585, Train Accuracy: 0.8117, Val BCE: 0.6532, Val Accuracy: 0.6662
Epoch 51/100, Train Loss: 0.5558, Train Accuracy: 0.8282, Val BCE: 0.6599, Val Accuracy: 0.6751
Epoch 61/100, Train Loss: 0.5433, Train Accuracy: 0.8237, Val BCE: 0.6557, Val Accuracy: 0.6827
Epoch 71/100, Train Loss: 0.5443, Train Accuracy: 0.8232, Val BCE: 0.6984, Val Accuracy: 0.6929
Epoch 81/100, Train Loss: 0.5401, Train Accuracy: 0.8249, Val BCE: 0.6617, Val Accuracy: 0.6371
Epoch 91/100, Train Loss: 0.5306, Train Accuracy: 0.8339, Val BCE: 0.7140, Val Accuracy: 0.6739
{'rocauc': 0.6463885927505331}
Model: GIN Hidden Channels: 32 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.8800, Train Accuracy: 0.5675, Val BCE: 0.6128, Val Accuracy: 0.6624
Epoch 11/100, Train Loss: 0.5562, Train Accuracy: 0.8251, Val BCE: 0.6486, Val Accuracy: 0.6574
Epoch 21/100, Train Loss: 0.5250, Train Accuracy: 0.8352, Val BCE: 0.6538, Val Accuracy: 0.6637
Epoch 31/100, Train Loss: 0.4873, Train Accuracy: 0.8474, Val BCE: 0.7013, Val Accuracy: 0.6650
Epoch 41/100, Train Loss: 0.4829, Train Accuracy: 0.8462, Val BCE: 0.6481, Val Accuracy: 0.6789
Epoch 51/100, Train Loss: 0.4753, Train Accuracy: 0.8465, Val BCE: 0.6617, Val Accuracy: 0.6929
Epoch 61/100, Train Loss: 0.4533, Train Accuracy: 0.8558, Val BCE: 0.6872, Val Accuracy: 0.6459
Epoch 71/100, Train Loss: 0.4535, Train Accuracy: 0.8552, Val BCE: 0.6880, Val Accuracy: 0.6688
Epoch 81/100, Train Loss: 0.4412, Train Accuracy: 0.8561, Val BCE: 0.7559, Val Accuracy: 0.6421
Epoch 91/100, Train Loss: 0.4390, Train Accuracy: 0.8585, Val BCE: 0.7150, Val Accuracy: 0.6624
{'rocauc': 0.6827914001421465}
Model: GIN Hidden Channels: 32 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.8180, Train Accuracy: 0.6149, Val BCE: 0.6565, Val Accuracy: 0.6332
Epoch 11/100, Train Loss: 0.5520, Train Accuracy: 0.8142, Val BCE: 0.7873, Val Accuracy: 0.5673
Epoch 21/100, Train Loss: 0.5087, Train Accuracy: 0.8311, Val BCE: 0.6188, Val Accuracy: 0.7069
Epoch 31/100, Train Loss: 0.4726, Train Accuracy: 0.8462, Val BCE: 0.6574, Val Accuracy: 0.6954
Epoch 41/100, Train Loss: 0.4533, Train Accuracy: 0.8462, Val BCE: 0.7967, Val Accuracy: 0.5812
Epoch 51/100, Train Loss: 0.4298, Train Accuracy: 0.8517, Val BCE: 0.6925, Val Accuracy: 0.6624
Epoch 61/100, Train Loss: 0.4142, Train Accuracy: 0.8600, Val BCE: 0.7318, Val Accuracy: 0.6256
Epoch 71/100, Train Loss: 0.4082, Train Accuracy: 0.8622, Val BCE: 0.7708, Val Accuracy: 0.6447
Epoch 81/100, Train Loss: 0.3832, Train Accuracy: 0.8693, Val BCE: 0.6576, Val Accuracy: 0.7107
Epoch 91/100, Train Loss: 0.3816, Train Accuracy: 0.8684, Val BCE: 0.7755, Val Accuracy: 0.6815
{'rocauc': 0.7313321783937455}
Model: GIN Hidden Channels: 64 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7635, Train Accuracy: 0.6601, Val BCE: 0.6185, Val Accuracy: 0.6701
Epoch 11/100, Train Loss: 0.6008, Train Accuracy: 0.8018, Val BCE: 0.6609, Val Accuracy: 0.6612
Epoch 21/100, Train Loss: 0.5660, Train Accuracy: 0.8216, Val BCE: 0.6528, Val Accuracy: 0.6510
Epoch 31/100, Train Loss: 0.5639, Train Accuracy: 0.8123, Val BCE: 0.6597, Val Accuracy: 0.6827
Epoch 41/100, Train Loss: 0.5387, Train Accuracy: 0.8130, Val BCE: 0.6676, Val Accuracy: 0.6777
Epoch 51/100, Train Loss: 0.5355, Train Accuracy: 0.8270, Val BCE: 0.6583, Val Accuracy: 0.6675
Epoch 61/100, Train Loss: 0.5275, Train Accuracy: 0.8339, Val BCE: 0.7472, Val Accuracy: 0.6358
Epoch 71/100, Train Loss: 0.5253, Train Accuracy: 0.8336, Val BCE: 0.6727, Val Accuracy: 0.6929
Epoch 81/100, Train Loss: 0.5117, Train Accuracy: 0.8372, Val BCE: 0.6719, Val Accuracy: 0.6320
Epoch 91/100, Train Loss: 0.5151, Train Accuracy: 0.8314, Val BCE: 0.7111, Val Accuracy: 0.6675
{'rocauc': 0.6590485074626866}
Model: GIN Hidden Channels: 64 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7745, Train Accuracy: 0.6469, Val BCE: 0.7692, Val Accuracy: 0.4949
Epoch 11/100, Train Loss: 0.5674, Train Accuracy: 0.8150, Val BCE: 0.6120, Val Accuracy: 0.6662
Epoch 21/100, Train Loss: 0.5141, Train Accuracy: 0.8312, Val BCE: 0.6555, Val Accuracy: 0.6447
Epoch 31/100, Train Loss: 0.4716, Train Accuracy: 0.8457, Val BCE: 0.6958, Val Accuracy: 0.6929
Epoch 41/100, Train Loss: 0.4660, Train Accuracy: 0.8460, Val BCE: 0.7642, Val Accuracy: 0.6904
Epoch 51/100, Train Loss: 0.4334, Train Accuracy: 0.8629, Val BCE: 0.7397, Val Accuracy: 0.6307
Epoch 61/100, Train Loss: 0.4361, Train Accuracy: 0.8608, Val BCE: 0.7835, Val Accuracy: 0.6751
Epoch 71/100, Train Loss: 0.4176, Train Accuracy: 0.8624, Val BCE: 0.7095, Val Accuracy: 0.6827
Epoch 81/100, Train Loss: 0.3975, Train Accuracy: 0.8736, Val BCE: 0.7057, Val Accuracy: 0.6992
Epoch 91/100, Train Loss: 0.4031, Train Accuracy: 0.8700, Val BCE: 0.7463, Val Accuracy: 0.6916
{'rocauc': 0.668165867093106}
Model: GIN Hidden Channels: 64 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7966, Train Accuracy: 0.6285, Val BCE: 0.7450, Val Accuracy: 0.4797
Epoch 11/100, Train Loss: 0.5437, Train Accuracy: 0.8284, Val BCE: 0.7269, Val Accuracy: 0.6079
Epoch 21/100, Train Loss: 0.5003, Train Accuracy: 0.8388, Val BCE: 0.5706, Val Accuracy: 0.7322
Epoch 31/100, Train Loss: 0.4506, Train Accuracy: 0.8522, Val BCE: 0.6845, Val Accuracy: 0.6865
Epoch 41/100, Train Loss: 0.4501, Train Accuracy: 0.8427, Val BCE: 0.7061, Val Accuracy: 0.6193
Epoch 51/100, Train Loss: 0.4208, Train Accuracy: 0.8646, Val BCE: 0.8438, Val Accuracy: 0.5266
Epoch 61/100, Train Loss: 0.3963, Train Accuracy: 0.8637, Val BCE: 0.8170, Val Accuracy: 0.6865
Epoch 71/100, Train Loss: 0.3769, Train Accuracy: 0.8733, Val BCE: 0.7094, Val Accuracy: 0.6637
Epoch 81/100, Train Loss: 0.3672, Train Accuracy: 0.8747, Val BCE: 0.7123, Val Accuracy: 0.6789
Epoch 91/100, Train Loss: 0.3660, Train Accuracy: 0.8789, Val BCE: 0.7583, Val Accuracy: 0.6345
{'rocauc': 0.7119351160862355}
Model: GIN Hidden Channels: 128 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7969, Train Accuracy: 0.6588, Val BCE: 0.6575, Val Accuracy: 0.6206
Epoch 11/100, Train Loss: 0.6174, Train Accuracy: 0.7908, Val BCE: 0.6204, Val Accuracy: 0.6612
Epoch 21/100, Train Loss: 0.5889, Train Accuracy: 0.8051, Val BCE: 0.6708, Val Accuracy: 0.6548
Epoch 31/100, Train Loss: 0.5675, Train Accuracy: 0.8082, Val BCE: 0.7064, Val Accuracy: 0.6117
Epoch 41/100, Train Loss: 0.5527, Train Accuracy: 0.8090, Val BCE: 0.6542, Val Accuracy: 0.6459
Epoch 51/100, Train Loss: 0.5489, Train Accuracy: 0.8161, Val BCE: 0.6375, Val Accuracy: 0.6904
Epoch 61/100, Train Loss: 0.5367, Train Accuracy: 0.8229, Val BCE: 0.6601, Val Accuracy: 0.6447
Epoch 71/100, Train Loss: 0.5335, Train Accuracy: 0.8191, Val BCE: 0.7196, Val Accuracy: 0.6459
Epoch 81/100, Train Loss: 0.5233, Train Accuracy: 0.8238, Val BCE: 0.6579, Val Accuracy: 0.6992
Epoch 91/100, Train Loss: 0.5187, Train Accuracy: 0.8174, Val BCE: 0.7151, Val Accuracy: 0.6713
{'rocauc': 0.658337775408671}
Model: GIN Hidden Channels: 128 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7538, Train Accuracy: 0.6935, Val BCE: 0.7608, Val Accuracy: 0.5254
Epoch 11/100, Train Loss: 0.5735, Train Accuracy: 0.8158, Val BCE: 0.6535, Val Accuracy: 0.6206
Epoch 21/100, Train Loss: 0.5400, Train Accuracy: 0.8249, Val BCE: 0.6908, Val Accuracy: 0.6282
Epoch 31/100, Train Loss: 0.4855, Train Accuracy: 0.8424, Val BCE: 0.6460, Val Accuracy: 0.6624
Epoch 41/100, Train Loss: 0.4618, Train Accuracy: 0.8544, Val BCE: 0.7373, Val Accuracy: 0.6662
Epoch 51/100, Train Loss: 0.4353, Train Accuracy: 0.8618, Val BCE: 0.8588, Val Accuracy: 0.5964
Epoch 61/100, Train Loss: 0.4148, Train Accuracy: 0.8662, Val BCE: 0.7717, Val Accuracy: 0.6574
Epoch 71/100, Train Loss: 0.4064, Train Accuracy: 0.8619, Val BCE: 0.7386, Val Accuracy: 0.6777
Epoch 81/100, Train Loss: 0.3948, Train Accuracy: 0.8753, Val BCE: 0.8668, Val Accuracy: 0.6447
Epoch 91/100, Train Loss: 0.3711, Train Accuracy: 0.8786, Val BCE: 0.7051, Val Accuracy: 0.6827
{'rocauc': 0.6712790215588722}
Model: GIN Hidden Channels: 128 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7802, Train Accuracy: 0.6686, Val BCE: 0.7264, Val Accuracy: 0.5533
Epoch 11/100, Train Loss: 0.5715, Train Accuracy: 0.8179, Val BCE: 0.5954, Val Accuracy: 0.7030
Epoch 21/100, Train Loss: 0.5362, Train Accuracy: 0.8243, Val BCE: 0.6083, Val Accuracy: 0.7043
Epoch 31/100, Train Loss: 0.5147, Train Accuracy: 0.8267, Val BCE: 0.9203, Val Accuracy: 0.4543
Epoch 41/100, Train Loss: 0.4732, Train Accuracy: 0.8459, Val BCE: 0.7500, Val Accuracy: 0.5482
Epoch 51/100, Train Loss: 0.4447, Train Accuracy: 0.8541, Val BCE: 0.6577, Val Accuracy: 0.6802
Epoch 61/100, Train Loss: 0.4296, Train Accuracy: 0.8542, Val BCE: 0.6335, Val Accuracy: 0.6726
Epoch 71/100, Train Loss: 0.4195, Train Accuracy: 0.8509, Val BCE: 0.6687, Val Accuracy: 0.6459
Epoch 81/100, Train Loss: 0.3909, Train Accuracy: 0.8726, Val BCE: 0.7363, Val Accuracy: 0.6827
Epoch 91/100, Train Loss: 0.3930, Train Accuracy: 0.8736, Val BCE: 0.6533, Val Accuracy: 0.7145
{'rocauc': 0.713101160862355}
Model: SAGE Hidden Channels: 32 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7156, Train Accuracy: 0.7503, Val BCE: 0.6176, Val Accuracy: 0.6865
Epoch 11/100, Train Loss: 0.6174, Train Accuracy: 0.7971, Val BCE: 0.6562, Val Accuracy: 0.6168
Epoch 21/100, Train Loss: 0.5884, Train Accuracy: 0.7969, Val BCE: 0.6238, Val Accuracy: 0.6662
Epoch 31/100, Train Loss: 0.5688, Train Accuracy: 0.8180, Val BCE: 0.6135, Val Accuracy: 0.6802
Epoch 41/100, Train Loss: 0.5594, Train Accuracy: 0.8108, Val BCE: 0.6348, Val Accuracy: 0.6891
Epoch 51/100, Train Loss: 0.5525, Train Accuracy: 0.8230, Val BCE: 0.6510, Val Accuracy: 0.6827
Epoch 61/100, Train Loss: 0.5473, Train Accuracy: 0.8216, Val BCE: 0.6311, Val Accuracy: 0.6675
Epoch 71/100, Train Loss: 0.5435, Train Accuracy: 0.8141, Val BCE: 0.6554, Val Accuracy: 0.6840
Epoch 81/100, Train Loss: 0.5471, Train Accuracy: 0.8273, Val BCE: 0.6665, Val Accuracy: 0.6777
Epoch 91/100, Train Loss: 0.5411, Train Accuracy: 0.8238, Val BCE: 0.6656, Val Accuracy: 0.6574
{'rocauc': 0.6677401682065862}
Model: SAGE Hidden Channels: 32 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7266, Train Accuracy: 0.7722, Val BCE: 0.6461, Val Accuracy: 0.6231
Epoch 11/100, Train Loss: 0.5902, Train Accuracy: 0.8032, Val BCE: 0.6289, Val Accuracy: 0.6383
Epoch 21/100, Train Loss: 0.5464, Train Accuracy: 0.8223, Val BCE: 0.6303, Val Accuracy: 0.6891
Epoch 31/100, Train Loss: 0.5186, Train Accuracy: 0.8271, Val BCE: 0.6284, Val Accuracy: 0.6929
Epoch 41/100, Train Loss: 0.4905, Train Accuracy: 0.8421, Val BCE: 0.7066, Val Accuracy: 0.6751
Epoch 51/100, Train Loss: 0.4774, Train Accuracy: 0.8467, Val BCE: 0.6316, Val Accuracy: 0.6739
Epoch 61/100, Train Loss: 0.4737, Train Accuracy: 0.8479, Val BCE: 0.6578, Val Accuracy: 0.6967
Epoch 71/100, Train Loss: 0.4634, Train Accuracy: 0.8479, Val BCE: 0.6633, Val Accuracy: 0.6853
Epoch 81/100, Train Loss: 0.4595, Train Accuracy: 0.8564, Val BCE: 0.7219, Val Accuracy: 0.6269
Epoch 91/100, Train Loss: 0.4520, Train Accuracy: 0.8500, Val BCE: 0.6725, Val Accuracy: 0.6827
{'rocauc': 0.6745809642264866}
Model: SAGE Hidden Channels: 32 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7474, Train Accuracy: 0.7854, Val BCE: 0.6520, Val Accuracy: 0.6485
Epoch 11/100, Train Loss: 0.5870, Train Accuracy: 0.8098, Val BCE: 0.6338, Val Accuracy: 0.6307
Epoch 21/100, Train Loss: 0.5375, Train Accuracy: 0.8138, Val BCE: 0.6392, Val Accuracy: 0.6840
Epoch 31/100, Train Loss: 0.4973, Train Accuracy: 0.8338, Val BCE: 0.6386, Val Accuracy: 0.6688
Epoch 41/100, Train Loss: 0.4568, Train Accuracy: 0.8531, Val BCE: 0.6682, Val Accuracy: 0.6777
Epoch 51/100, Train Loss: 0.4243, Train Accuracy: 0.8611, Val BCE: 0.7005, Val Accuracy: 0.6739
Epoch 61/100, Train Loss: 0.3979, Train Accuracy: 0.8690, Val BCE: 0.7932, Val Accuracy: 0.6827
Epoch 71/100, Train Loss: 0.3860, Train Accuracy: 0.8774, Val BCE: 0.8303, Val Accuracy: 0.6409
Epoch 81/100, Train Loss: 0.3647, Train Accuracy: 0.8815, Val BCE: 0.7723, Val Accuracy: 0.6713
Epoch 91/100, Train Loss: 0.3655, Train Accuracy: 0.8766, Val BCE: 0.7815, Val Accuracy: 0.6637
{'rocauc': 0.6868521973466003}
Model: SAGE Hidden Channels: 64 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7751, Train Accuracy: 0.7450, Val BCE: 0.6236, Val Accuracy: 0.6802
Epoch 11/100, Train Loss: 0.6102, Train Accuracy: 0.7925, Val BCE: 0.6210, Val Accuracy: 0.6675
Epoch 21/100, Train Loss: 0.5806, Train Accuracy: 0.8046, Val BCE: 0.6564, Val Accuracy: 0.6865
Epoch 31/100, Train Loss: 0.5654, Train Accuracy: 0.8150, Val BCE: 0.7017, Val Accuracy: 0.6701
Epoch 41/100, Train Loss: 0.5570, Train Accuracy: 0.8160, Val BCE: 0.6207, Val Accuracy: 0.6980
Epoch 51/100, Train Loss: 0.5506, Train Accuracy: 0.8114, Val BCE: 0.6459, Val Accuracy: 0.6764
Epoch 61/100, Train Loss: 0.5476, Train Accuracy: 0.8210, Val BCE: 0.6163, Val Accuracy: 0.6878
Epoch 71/100, Train Loss: 0.5380, Train Accuracy: 0.8279, Val BCE: 0.6565, Val Accuracy: 0.6954
Epoch 81/100, Train Loss: 0.5372, Train Accuracy: 0.8149, Val BCE: 0.6438, Val Accuracy: 0.6967
Epoch 91/100, Train Loss: 0.5332, Train Accuracy: 0.8169, Val BCE: 0.6440, Val Accuracy: 0.7056
{'rocauc': 0.6752842928216062}
Model: SAGE Hidden Channels: 64 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7491, Train Accuracy: 0.7412, Val BCE: 0.6392, Val Accuracy: 0.6739
Epoch 11/100, Train Loss: 0.6015, Train Accuracy: 0.7947, Val BCE: 0.6149, Val Accuracy: 0.6574
Epoch 21/100, Train Loss: 0.5592, Train Accuracy: 0.8153, Val BCE: 0.6928, Val Accuracy: 0.6586
Epoch 31/100, Train Loss: 0.5105, Train Accuracy: 0.8293, Val BCE: 0.6434, Val Accuracy: 0.6827
Epoch 41/100, Train Loss: 0.4790, Train Accuracy: 0.8441, Val BCE: 0.6772, Val Accuracy: 0.6662
Epoch 51/100, Train Loss: 0.4611, Train Accuracy: 0.8548, Val BCE: 0.7133, Val Accuracy: 0.6485
Epoch 61/100, Train Loss: 0.4462, Train Accuracy: 0.8553, Val BCE: 0.7347, Val Accuracy: 0.6383
Epoch 71/100, Train Loss: 0.4351, Train Accuracy: 0.8580, Val BCE: 0.6906, Val Accuracy: 0.6447
Epoch 81/100, Train Loss: 0.4256, Train Accuracy: 0.8626, Val BCE: 0.7097, Val Accuracy: 0.6675
Epoch 91/100, Train Loss: 0.4203, Train Accuracy: 0.8547, Val BCE: 0.7154, Val Accuracy: 0.6650
{'rocauc': 0.6727671167969675}
Model: SAGE Hidden Channels: 64 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7611, Train Accuracy: 0.7423, Val BCE: 0.6339, Val Accuracy: 0.6777
Epoch 11/100, Train Loss: 0.5783, Train Accuracy: 0.8111, Val BCE: 0.6236, Val Accuracy: 0.6751
Epoch 21/100, Train Loss: 0.5065, Train Accuracy: 0.8377, Val BCE: 0.6236, Val Accuracy: 0.7005
Epoch 31/100, Train Loss: 0.4478, Train Accuracy: 0.8520, Val BCE: 0.7076, Val Accuracy: 0.6637
Epoch 41/100, Train Loss: 0.4158, Train Accuracy: 0.8678, Val BCE: 0.6691, Val Accuracy: 0.6992
Epoch 51/100, Train Loss: 0.3675, Train Accuracy: 0.8770, Val BCE: 0.7298, Val Accuracy: 0.6827
Epoch 61/100, Train Loss: 0.3520, Train Accuracy: 0.8907, Val BCE: 0.7839, Val Accuracy: 0.6662
Epoch 71/100, Train Loss: 0.3189, Train Accuracy: 0.8963, Val BCE: 0.8047, Val Accuracy: 0.6739
Epoch 81/100, Train Loss: 0.3131, Train Accuracy: 0.9030, Val BCE: 0.8199, Val Accuracy: 0.6865
Epoch 91/100, Train Loss: 0.3027, Train Accuracy: 0.9035, Val BCE: 0.8588, Val Accuracy: 0.6726
{'rocauc': 0.6924973347547974}
Model: SAGE Hidden Channels: 128 Layers: 1
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7339, Train Accuracy: 0.7489, Val BCE: 0.6188, Val Accuracy: 0.6688
Epoch 11/100, Train Loss: 0.6135, Train Accuracy: 0.8037, Val BCE: 0.6046, Val Accuracy: 0.6942
Epoch 21/100, Train Loss: 0.5819, Train Accuracy: 0.8114, Val BCE: 0.6569, Val Accuracy: 0.6815
Epoch 31/100, Train Loss: 0.5703, Train Accuracy: 0.8145, Val BCE: 0.6368, Val Accuracy: 0.6536
Epoch 41/100, Train Loss: 0.5570, Train Accuracy: 0.8190, Val BCE: 0.6187, Val Accuracy: 0.6510
Epoch 51/100, Train Loss: 0.5502, Train Accuracy: 0.8257, Val BCE: 0.6275, Val Accuracy: 0.6980
Epoch 61/100, Train Loss: 0.5451, Train Accuracy: 0.8262, Val BCE: 0.6722, Val Accuracy: 0.6574
Epoch 71/100, Train Loss: 0.5388, Train Accuracy: 0.8275, Val BCE: 0.6610, Val Accuracy: 0.6764
Epoch 81/100, Train Loss: 0.5352, Train Accuracy: 0.8293, Val BCE: 0.6560, Val Accuracy: 0.6574
Epoch 91/100, Train Loss: 0.5306, Train Accuracy: 0.8215, Val BCE: 0.6815, Val Accuracy: 0.6713
{'rocauc': 0.6573716240227434}
Model: SAGE Hidden Channels: 128 Layers: 2
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7642, Train Accuracy: 0.7439, Val BCE: 0.6532, Val Accuracy: 0.6015
Epoch 11/100, Train Loss: 0.5969, Train Accuracy: 0.8024, Val BCE: 0.6103, Val Accuracy: 0.6789
Epoch 21/100, Train Loss: 0.5385, Train Accuracy: 0.8232, Val BCE: 0.6315, Val Accuracy: 0.6739
Epoch 31/100, Train Loss: 0.4873, Train Accuracy: 0.8385, Val BCE: 0.6231, Val Accuracy: 0.6878
Epoch 41/100, Train Loss: 0.4636, Train Accuracy: 0.8449, Val BCE: 0.6870, Val Accuracy: 0.6599
Epoch 51/100, Train Loss: 0.4288, Train Accuracy: 0.8560, Val BCE: 0.6538, Val Accuracy: 0.6789
Epoch 61/100, Train Loss: 0.4223, Train Accuracy: 0.8583, Val BCE: 0.7165, Val Accuracy: 0.6688
Epoch 71/100, Train Loss: 0.4026, Train Accuracy: 0.8635, Val BCE: 0.6954, Val Accuracy: 0.6865
Epoch 81/100, Train Loss: 0.3890, Train Accuracy: 0.8681, Val BCE: 0.7264, Val Accuracy: 0.6624
Epoch 91/100, Train Loss: 0.3818, Train Accuracy: 0.8709, Val BCE: 0.7007, Val Accuracy: 0.6599
{'rocauc': 0.6847459132906895}
Model: SAGE Hidden Channels: 128 Layers: 4
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:248.)
  edges = torch.tensor(list(edges))
/Users/chinmaymittal/Desktop/IITD/COL761/COL761/A3/dataset.py:51: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/aten/src/ATen/native/TensorShape.cpp:3575.)
  d = Data(edge_index=edges.T, x=node_features, edge_attr=edge_features, y = label)
Dataset Path: ./dataset/dataset_2/train
Number of nan:  508
Number of 1:  1209
Number of 0:  5143
Dataset Path: ./dataset/dataset_2/valid
Number of nan:  70
Number of 1:  252
Number of 0:  536
Epoch 1/100, Train Loss: 0.7631, Train Accuracy: 0.7442, Val BCE: 0.6315, Val Accuracy: 0.6853
Epoch 11/100, Train Loss: 0.6034, Train Accuracy: 0.8031, Val BCE: 0.6336, Val Accuracy: 0.6942
Epoch 21/100, Train Loss: 0.5161, Train Accuracy: 0.8234, Val BCE: 0.6115, Val Accuracy: 0.6865
Epoch 31/100, Train Loss: 0.4639, Train Accuracy: 0.8377, Val BCE: 0.6615, Val Accuracy: 0.6751
Epoch 41/100, Train Loss: 0.4249, Train Accuracy: 0.8569, Val BCE: 0.7315, Val Accuracy: 0.6536
Epoch 51/100, Train Loss: 0.3924, Train Accuracy: 0.8626, Val BCE: 0.7161, Val Accuracy: 0.6853
Epoch 61/100, Train Loss: 0.3660, Train Accuracy: 0.8696, Val BCE: 0.8575, Val Accuracy: 0.6612
Epoch 71/100, Train Loss: 0.3526, Train Accuracy: 0.8833, Val BCE: 0.8024, Val Accuracy: 0.6789
Epoch 81/100, Train Loss: 0.3353, Train Accuracy: 0.8863, Val BCE: 0.8938, Val Accuracy: 0.6574
Epoch 91/100, Train Loss: 0.3102, Train Accuracy: 0.8936, Val BCE: 0.8737, Val Accuracy: 0.6485
{'rocauc': 0.6654784115138592}
